[include beep.cfg]
[include kinematics.cfg]

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True  ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 125   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 10.0  ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 0.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True  ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 250   ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 600   ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : "filament_switch_sensor RunoutSensor"    
                                  ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
variable_user_pause_macro : "STATUS_READY"    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
variable_user_resume_macro: "STATUS_PRINTING" ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
variable_user_cancel_macro: "STATUS_READY"      ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED|default(60)|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(190)|int %}
    STATUS_HEATING
    M140 S{BED_TEMP}        
    LAZY_HOME AXES=XY
    G28 Z
    STATUS_BUSY
    Smart_Park
    M190 S{BED_TEMP}
    M104 S{EXTRUDER_TEMP}
    
    G28 Z
    BED_MESH_CALIBRATE ADAPTIVE=1 METHOD="scan"
    
    STATUS_BUSY
    Smart_Park
    M109 S{EXTRUDER_TEMP}     
    
    STATUS_CLEANING
    LINE_PURGE

    STATUS_PRINTING

[gcode_macro PRINT_END]
description: "Finalización de impresión con enfriamiento y aparcado"
gcode:
    M400  ;Clear buffer
    G90  ;Set to absolute positioning
    _MOVE_AWAY  ;Move away from print
    G92 E0   ;Reset extruder
    G1 F-5 F1800  ;Retract filament
    TURN_OFF_HEATERS  ;Turn off heaters
    PARK_CENTER_REAR  ;Park central rear
    M84  ;Disable motors
    STATUS_READY

[gcode_macro PARK_CENTER_FRONT]
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    STATUS_BUSY
    G0 X{th.axis_maximum.x//2} Y5 F3600  
    STATUS_READY

[gcode_macro _MOVE_AWAY]
gcode:
    STATUS_BUSY
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
      
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing

[gcode_macro PARK_CENTER_REAR]
gcode:
    STATUS_BUSY
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}

    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  
    STATUS_READY

[gcode_macro M190]
rename_existing: M190.1
gcode:
    STATUS_HEATING
    M190.1 { rawparams }
    STATUS_READY

[gcode_macro M109]
rename_existing: M109.1
gcode:
    STATUS_HEATING
    M109.1 { rawparams }
    STATUS_READY
    

[gcode_macro M600]
description: Filament change
gcode: PAUSE RESTORE=0
